name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2.1.4
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install Poetry
        run: pip install poetry

      - name: Set up venv cache
        id: cache-env
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache-env.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        run: poetry install

      - name: Test with pytest and coverage
        run: |
          poetry run pytest -n2 --dist=loadfile --cov

      - name: Coverage report
        if: ${{ always() }}
        run: |
          poetry run coverage report -m
          poetry run coverage html

      - name: Archive coverage report
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: htmlcov
